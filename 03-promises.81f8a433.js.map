{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","refs","form","document","querySelector","step","amount","onFormSubmit","event","preventDefault","firstDelay","Number","currentTarget","elements","value","stepDelay","amountDelayes","i","then","console","log","catch","reset","addEventListener"],"mappings":";AAAA,SAASA,EAAcC,EAAUC,GACzBC,MAAAA,EAAgBC,KAAKC,SAAW,GAChC,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC1BC,WAAW,KACLN,EAEFI,EAAQ,CAAEN,SAAAA,EAAUC,MAAAA,IAGpBM,EAAO,CAAEP,SAAAA,EAAUC,MAAAA,KAEpBA,KAIP,MAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BX,MAAOU,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,oBAKjC,SAASG,EAAaC,GACpBA,EAAMC,iBACAC,MAAAA,EAAaC,OAAOH,EAAMI,cAAcC,SAASpB,MAAMqB,OACvDC,EAAYJ,OAAOH,EAAMI,cAAcC,SAASR,KAAKS,OACrDE,EAAgBR,EAAMI,cAAcC,SAASP,OAAOQ,MACtDrB,IAAAA,EAAQiB,EAEP,IAAA,IAAIO,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EACnC1B,EAAc0B,EAAGxB,GAClByB,KAAK,EAAG1B,SAAAA,EAAUC,MAAAA,MACjB0B,QAAQC,2BAA2B5B,QAAeC,SAEnD4B,MAAM,EAAG7B,SAAAA,EAAUC,MAAAA,MAClB0B,QAAQC,0BAA0B5B,QAAeC,SAErDA,GAASsB,EAEXd,EAAKC,KAAKoB,QAnBZrB,EAAKC,KAAKqB,iBAAiB,SAAUhB","file":"03-promises.81f8a433.js","sourceRoot":"../src","sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector(\"[name='delay']\"),\n  step: document.querySelector(\"[name='step']\"),\n  amount: document.querySelector(\"[name='amount']\"),\n};\n\nrefs.form.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const firstDelay = Number(event.currentTarget.elements.delay.value);\n  const stepDelay = Number(event.currentTarget.elements.step.value);\n  const amountDelayes = event.currentTarget.elements.amount.value;\n  let delay = firstDelay;\n  \n  for (let i = 1; i <= amountDelayes; i += 1) {\n        createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += stepDelay;\n  }\n  refs.form.reset();\n}"]}